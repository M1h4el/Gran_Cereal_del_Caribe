{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { getToken } from \"next-auth/jwt\";\r\n\r\nexport async function middleware(req) {\r\n  const token = await getToken({ req, secret: process.env.NEXTAUTH_SECRET });\r\n  const { pathname } = req.nextUrl;\r\n\r\n  // Si está logueado y trata de acceder a \"/\"\r\n  if (token && pathname === \"/\") {\r\n    return NextResponse.redirect(new URL(\"/dashboard\", req.url));\r\n  }\r\n\r\n  // Si no está logueado y trata de acceder a una ruta protegida\r\n  if (!token && pathname !== \"/\") {\r\n    return NextResponse.redirect(new URL(\"/\", req.url));\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\n// Aplicar middleware solo a ciertas rutas\r\nexport const config = {\r\n  matcher: [\"/\", \"/dashboard/:path*\", \"/admin/:path*\", \"/perfil\"],\r\n};"],"names":[],"mappings":";;;;AAAA;AACA;AADA;;;AAGO,eAAe,WAAW,GAAG;IAClC,MAAM,QAAQ,MAAM,CAAA,GAAA,4IAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;QAAK,QAAQ,QAAQ,GAAG,CAAC,eAAe;IAAC;IACxE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAEhC,4CAA4C;IAC5C,IAAI,SAAS,aAAa,KAAK;QAC7B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,IAAI,GAAG;IAC5D;IAEA,8DAA8D;IAC9D,IAAI,CAAC,SAAS,aAAa,KAAK;QAC9B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;IACnD;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAK;QAAqB;QAAiB;KAAU;AACjE"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}