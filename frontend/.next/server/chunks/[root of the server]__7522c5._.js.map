{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nconst pool = mysql.createPool({\r\n  host: process.env.DB_HOST, \r\n  user: process.env.DB_USER, \r\n  password: process.env.DB_PASSWORD, \r\n  database: process.env.DB_NAME, \r\n  waitForConnections: true,\r\n  connectionLimit: 10,\r\n  queueLimit: 0,\r\n});\r\n\r\nexport default pool;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;uCAEe"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\n\r\nimport { db } from \"@/lib/db\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nexport default NextAuth({\r\n  providers: [\r\n    CredentialsProvider({\r\n      userName: \"Credentials\",\r\n      credentials: {\r\n        email: { label: \"Email\", type: \"text\", placeholder: \"example@example.com\" },\r\n        password: { label: \"Password\", type: \"password\" }\r\n      },\r\n      async authorize(credentials) {\r\n        try {\r\n          const [users] = await db.query(\"SELECT * FROM users WHERE email = ?\", [credentials.email]);\r\n          if (users.length === 0) {\r\n            throw new Error(\"Usuario no encontrado\");\r\n          }\r\n\r\n          const user = users[0];\r\n\r\n          // Comparar contraseña encriptada\r\n          const isValidPassword = await bcrypt.compare(credentials.password, user.password);\r\n          if (!isValidPassword) {\r\n            throw new Error(\"Contraseña incorrecta\");\r\n          }\r\n\r\n          return { id: user.id, userName: user.userName, email: user.email, role: user.role };\r\n        } catch (error) {\r\n          throw new Error(error.message);\r\n        }\r\n      }\r\n    })\r\n  ],\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.role = user.role;  // Agregar el rol al token JWT\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      if (token) {\r\n        session.user.role = token.role;  // Agregar el rol a la sesión\r\n      }\r\n      return session;\r\n    }\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n  pages: {\r\n    signIn: \"/auth/login\"\r\n  }\r\n});\r\n\r\nexport const handler = NextAuth(authOptions);\r\nexport { handler as GET, handler as POST };"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGA;AACA;;;;;uCAEe,SAAS;IACtB,WAAW;QACT,oBAAoB;YAClB,UAAU;YACV,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;oBAAQ,aAAa;gBAAsB;gBAC1E,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI;oBACF,MAAM,CAAC,MAAM,GAAG,MAAM,kHAAA,CAAA,KAAE,CAAC,KAAK,CAAC,uCAAuC;wBAAC,YAAY,KAAK;qBAAC;oBACzF,IAAI,MAAM,MAAM,KAAK,GAAG;wBACtB,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,OAAO,KAAK,CAAC,EAAE;oBAErB,iCAAiC;oBACjC,MAAM,kBAAkB,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,QAAQ;oBAChF,IAAI,CAAC,iBAAiB;wBACpB,MAAM,IAAI,MAAM;oBAClB;oBAEA,OAAO;wBAAE,IAAI,KAAK,EAAE;wBAAE,UAAU,KAAK,QAAQ;wBAAE,OAAO,KAAK,KAAK;wBAAE,MAAM,KAAK,IAAI;oBAAC;gBACpF,EAAE,OAAO,OAAO;oBACd,MAAM,IAAI,MAAM,MAAM,OAAO;gBAC/B;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,IAAI,GAAG,KAAK,IAAI,EAAG,8BAA8B;YACzD;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,EAAG,6BAA6B;YAChE;YACA,OAAO;QACT;IACF;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,OAAO;QACL,QAAQ;IACV;AACF;AAEO,MAAM,UAAU,SAAS"}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}