{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nlet pool;\r\n\r\nif (!global._pool) {\r\n  global._pool = mysql.createPool({\r\n    host: process.env.DB_HOST,\r\n    user: process.env.DB_USER,\r\n    password: process.env.DB_PASSWORD,\r\n    database: process.env.DB_NAME,\r\n    waitForConnections: true,\r\n    connectionLimit: 100,\r\n    queueLimit: 0,\r\n  });\r\n}\r\n\r\npool = global._pool;\r\n\r\nexport { pool };"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,IAAI,CAAC,OAAO,KAAK,EAAE;IACjB,OAAO,KAAK,GAAG,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;QAC9B,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;QACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;QAC7B,oBAAoB;QACpB,iBAAiB;QACjB,YAAY;IACd;AACF;AAEA,OAAO,OAAO,KAAK"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/dbUtils.js"],"sourcesContent":["import { pool } from \"./db\";\r\n\r\nexport async function queryDB(query, params = []) {\r\n  let connection;\r\n  try {\r\n    connection = await pool.getConnection();\r\n    const [results] = await connection.execute(query, params);\r\n    const [rows] = await connection.query(\r\n      'SHOW STATUS WHERE `variable_name` = \"Threads_connected\"'\r\n    );\r\n    console.log(\"Conexiones activas:\", rows[0]);\r\n    return results;\r\n  } catch (error) {\r\n    console.error(\"Database error:\", error);\r\n    throw error;\r\n  } finally {\r\n    if (connection) connection.release();\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,QAAQ,KAAK,EAAE,SAAS,EAAE;IAC9C,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,kHAAA,CAAA,OAAI,CAAC,aAAa;QACrC,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,OAAO;QAClD,MAAM,CAAC,KAAK,GAAG,MAAM,WAAW,KAAK,CACnC;QAEF,QAAQ,GAAG,CAAC,uBAAuB,IAAI,CAAC,EAAE;QAC1C,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM;IACR,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/app/api/users/%5BuserId%5D/collaborators/%5BcollaboratorId%5D/invoices/route.js"],"sourcesContent":["import { queryDB } from \"@/lib/dbUtils\";\r\n\r\nexport async function GET(req, { params }) {\r\n  try {\r\n\r\n    const {collaboratorId} = await params\r\n\r\n    if (!params || !collaboratorId) {\r\n      return Response.json(\r\n        { error: \"Usuario o sucursal no especificados\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const users = await queryDB(\r\n        `SELECT * FROM invoices i WHERE user_seller_id = ?;;\r\n        `,\r\n        [collaboratorId]\r\n      );\r\n\r\n    return Response.json(users);\r\n  } catch (error) {\r\n    return Response.json({ error: error.message }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,GAAG,EAAE,EAAE,MAAM,EAAE;IACvC,IAAI;QAEF,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM;QAE/B,IAAI,CAAC,UAAU,CAAC,gBAAgB;YAC9B,OAAO,SAAS,IAAI,CAClB;gBAAE,OAAO;YAAsC,GAC/C;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,QAAQ,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EACtB,CAAC;QACD,CAAC,EACD;YAAC;SAAe;QAGpB,OAAO,SAAS,IAAI,CAAC;IACvB,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC/D;AACF"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}