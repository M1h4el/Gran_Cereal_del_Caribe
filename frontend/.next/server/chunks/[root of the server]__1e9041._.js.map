{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nlet pool;\r\n\r\nif (!global._pool) {\r\n  global._pool = mysql.createPool({\r\n    host: process.env.DB_HOST,\r\n    user: process.env.DB_USER,\r\n    password: process.env.DB_PASSWORD,\r\n    database: process.env.DB_NAME,\r\n    waitForConnections: true,\r\n    connectionLimit: 10,\r\n    queueLimit: 0,\r\n  });\r\n}\r\n\r\npool = global._pool;\r\n\r\nexport { pool };"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,IAAI,CAAC,OAAO,KAAK,EAAE;IACjB,OAAO,KAAK,GAAG,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;QAC9B,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;QACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;QAC7B,oBAAoB;QACpB,iBAAiB;QACjB,YAAY;IACd;AACF;AAEA,OAAO,OAAO,KAAK"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/dbUtils.js"],"sourcesContent":["import {pool} from \"./db\";\r\n\r\nexport async function queryDB(query, params = []) {\r\n  let connection;\r\n  try {\r\n    connection = await pool.getConnection();\r\n    const [results] = await connection.execute(query, params);\r\n    return results;\r\n  } catch (error) {\r\n    console.error(\"Database error:\", error);\r\n    throw error;\r\n  } finally {\r\n    if (connection) connection.release();\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,QAAQ,KAAK,EAAE,SAAS,EAAE;IAC9C,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,kHAAA,CAAA,OAAI,CAAC,aAAa;QACrC,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,OAAO;QAClD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM;IACR,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { queryDB } from \"@/lib/dbUtils\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nexport const authOptions = {\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        email: {\r\n          label: \"Email\",\r\n          type: \"text\",\r\n          placeholder: \"example@example.com\",\r\n        },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials) {\r\n\r\n        const [user] = await queryDB(\"SELECT * FROM users WHERE email = ?\", [\r\n          credentials.email,\r\n        ]);\r\n\r\n        if (!user || user.length === 0) {\r\n          throw new Error(\"Usuario no encontrado\");\r\n        }\r\n\r\n        try {\r\n\r\n          const isValidPassword = await bcrypt.compare(\r\n            credentials.password,\r\n            user.password\r\n          );\r\n\r\n          if (!isValidPassword) {\r\n            throw new Error(\"Contrase침a incorrecta\");\r\n          }\r\n\r\n          return {\r\n            id: user.user_id,\r\n            userName: user.userName,\r\n            email: user.email,\r\n            role: user.role,\r\n          };\r\n        } catch (error) {\r\n          throw new Error(\"Error interno al validar la contrase침a\");\r\n        }\r\n      },\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id; // Agregar el ID de usuario al token JWT\r\n        token.role = user.role; // Agregar el rol al token JWT\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      if (token) {\r\n        session.user.id = token.id;\r\n        session.user.role = token.role; // Agregar el rol a la sesi칩n\r\n      }\r\n      return session;\r\n    },\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n};\r\n\r\nexport const handler = NextAuth(authOptions);\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;AAEO,MAAM,cAAc;IACzB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBACL,OAAO;oBACP,MAAM;oBACN,aAAa;gBACf;gBACA,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBAEzB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EAAE,uCAAuC;oBAClE,YAAY,KAAK;iBAClB;gBAED,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;oBAC9B,MAAM,IAAI,MAAM;gBAClB;gBAEA,IAAI;oBAEF,MAAM,kBAAkB,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAC1C,YAAY,QAAQ,EACpB,KAAK,QAAQ;oBAGf,IAAI,CAAC,iBAAiB;wBACpB,MAAM,IAAI,MAAM;oBAClB;oBAEA,OAAO;wBACL,IAAI,KAAK,OAAO;wBAChB,UAAU,KAAK,QAAQ;wBACvB,OAAO,KAAK,KAAK;wBACjB,MAAM,KAAK,IAAI;oBACjB;gBACF,EAAE,OAAO,OAAO;oBACd,MAAM,IAAI,MAAM;gBAClB;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE,EAAE,wCAAwC;gBAC5D,MAAM,IAAI,GAAG,KAAK,IAAI,EAAE,8BAA8B;YACxD;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,EAAE,6BAA6B;YAC/D;YACA,OAAO;QACT;IACF;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC;AAEO,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/app/api/sucursales/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { queryDB } from \"@/lib/dbUtils\"; // Funci칩n para conectar a la BD\r\nimport { getServerSession } from \"next-auth\";\r\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\n\r\n// 游댳 Obtener sucursales del usuario autenticado\r\nexport async function GET(req) {\r\n  const session = await getServerSession(authOptions);\r\n  if (!session) {\r\n    return NextResponse.json({ error: \"No autenticado\" }, { status: 401 });\r\n  }\r\n\r\n  const { searchParams } = new URL(req.url);\r\n  const userId = searchParams.get(\"userId\");\r\n\r\n  if (!userId) {\r\n    return NextResponse.json({ error: \"Usuario no especificado\" }, { status: 400 });\r\n  }\r\n\r\n  try {\r\n\r\n    const user_id = session.user.id;\r\n    const sucursales = await queryDB(\"SELECT * FROM sucursales s WHERE user_id = ? ORDER BY s.sucursal_id DESC\", [user_id]);\r\n\r\n    return NextResponse.json(sucursales, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error al obtener sucursales:\", error);\r\n    return NextResponse.json({ error: \"Error interno del servidor\" }, { status: 500 });\r\n  }\r\n}\r\n\r\n// 游댳 Crear nueva sucursal\r\nexport async function POST(req) {\r\n  const session = await getServerSession(authOptions);\r\n  if (!session) {\r\n    return NextResponse.json({ error: \"No autenticado\" }, { status: 401 });\r\n  }\r\n  const { searchParams } = new URL(req.url);\r\n  const userId = searchParams.get(\"userId\");\r\n  if (!userId) {\r\n    return NextResponse.json({ error: \"Usuario no especificado\" }, { status: 400 });\r\n  }\r\n\r\n  try {\r\n    const user_id = session.user.id;\r\n    const { title, description } = await req.json();\r\n\r\n    await queryDB(\r\n      \"INSERT INTO sucursales (title, description, user_id) VALUES (?, ?, ?)\",\r\n      [title, description, user_id]\r\n    );\r\n\r\n    return NextResponse.json({ success: true, message: \"Sucursal creada correctamente\" }, { status: 201 });\r\n  } catch (error) {\r\n    console.error(\"Error al crear sucursal:\", error);\r\n    return NextResponse.json({ error: \"Error interno del servidor\" }, { status: 500 });\r\n  }\r\n}\r\n\r\n// 游댳 Actualizar sucursal\r\nexport async function PUT(req) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || !session.user) {\r\n      return NextResponse.json({ error: \"No autorizado\" }, { status: 401 });\r\n    }\r\n\r\n    const userEmail = session.user.email;\r\n    const { id, nombre, descripcion, imagen } = await req.json();\r\n\r\n    await queryDB(\"UPDATE sucursales SET nombre = ?, descripcion = ?, imagen = ? WHERE id = ? AND email = ?\", [nombre, descripcion, imagen, id, userEmail]);\r\n\r\n    return NextResponse.json({ message: \"Sucursal actualizada correctamente\" }, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error al actualizar sucursal:\", error);\r\n    return NextResponse.json({ error: \"Error interno del servidor\" }, { status: 500 });\r\n  }\r\n}\r\n\r\n// 游댳 Eliminar sucursal\r\nexport async function DELETE(req) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || !session.user) {\r\n      return NextResponse.json({ error: \"No autorizado\" }, { status: 401 });\r\n    }\r\n\r\n    const userEmail = session.user.email;\r\n    const { id } = await req.json();\r\n\r\n    await queryDB(\"DELETE FROM sucursales WHERE id = ? AND email = ?\", [id, userEmail]);\r\n\r\n    return NextResponse.json({ message: \"Sucursal eliminada correctamente\" }, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar sucursal:\", error);\r\n    return NextResponse.json({ error: \"Error interno del servidor\" }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}