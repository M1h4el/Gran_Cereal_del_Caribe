{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nlet pool;\r\n\r\nif (!global._pool) {\r\n  global._pool = mysql.createPool({\r\n    host: process.env.DB_HOST,\r\n    user: process.env.DB_USER,\r\n    password: process.env.DB_PASSWORD,\r\n    database: process.env.DB_NAME,\r\n    waitForConnections: true,\r\n    connectionLimit: 10,\r\n    queueLimit: 0,\r\n  });\r\n}\r\n\r\npool = global._pool;\r\n\r\nexport { pool };"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,IAAI,CAAC,OAAO,KAAK,EAAE;IACjB,OAAO,KAAK,GAAG,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;QAC9B,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;QACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;QAC7B,oBAAoB;QACpB,iBAAiB;QACjB,YAAY;IACd;AACF;AAEA,OAAO,OAAO,KAAK"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/dbUtils.js"],"sourcesContent":["import {pool} from \"./db\";\r\n\r\nexport async function queryDB(query, params = []) {\r\n  let connection;\r\n  try {\r\n    connection = await pool.getConnection();\r\n    const [results] = await connection.execute(query, params);\r\n    return results;\r\n  } catch (error) {\r\n    console.error(\"Database error:\", error);\r\n    throw error;\r\n  } finally {\r\n    if (connection) connection.release();\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,QAAQ,KAAK,EAAE,SAAS,EAAE;IAC9C,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,kHAAA,CAAA,OAAI,CAAC,aAAa;QACrC,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,OAAO;QAClD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM;IACR,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/app/api/invoices/%5BinvoiceId%5D/details/route.js"],"sourcesContent":["import { queryDB } from \"@/lib/dbUtils\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// ✅ GET: Obtener todos los detalles de una factura\r\nexport async function GET(req, { params }) {\r\n  const { invoiceId } = await params;\r\n\r\n  try {\r\n    if (invoiceId) {\r\n      const details = await queryDB(\r\n        `SELECT p.productCode, p.name, p.price, ind.idinvoice_detail, ind.idproduct, ind.quantity, ind.unitPrice, ind.subTotal, p.created_at, p.updated_at  FROM invoice_details ind, products p WHERE ind.idinvoice = 2 AND ind.idproduct = p.idproduct;`,\r\n        [invoiceId]\r\n      );\r\n      return NextResponse.json(details);\r\n    } else {\r\n      return NextResponse.json(\r\n        { error: \"Invoice Id no especificado\" },\r\n        { status: 404 }\r\n      );\r\n    }\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Error al obtener detalles\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ✅ POST: Crear un nuevo detalle\r\nexport async function POST(request, { params }) {\r\n  const { invoiceId } = params;\r\n  const body = await request.json();\r\n  const { idproduct, quantity, productType, unitPrice, subTotal } = body;\r\n\r\n  try {\r\n    const result = await queryDB(\r\n      `INSERT INTO invoice_details (idinvoice, idproduct, quantity, productType, unitPrice, subTotal, created_at, updated_at)\r\n       VALUES (?, ?, ?, ?, ?, ?, NOW(), NOW())`,\r\n      [invoiceId, idproduct, quantity, productType, unitPrice, subTotal]\r\n    );\r\n\r\n    return NextResponse.json(\r\n      { message: \"Detalle creado\", id: result.insertId },\r\n      { status: 201 }\r\n    );\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Error al crear detalle\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ✅ PUT: Actualizar un detalle existente\r\nexport async function PUT(request, { params }) {\r\n  const { invoiceId } = params;\r\n  const body = await request.json();\r\n  const { id, idproduct, quantity, productType, unitPrice, subTotal } = body;\r\n\r\n  try {\r\n    await queryDB(\r\n      `UPDATE invoice_details\r\n       SET idinvoice = ?, idproduct = ?, quantity = ?, productType = ?, unitPrice = ?, subTotal = ?, updated_at = NOW()\r\n       WHERE id = ?`,\r\n      [invoiceId, idproduct, quantity, productType, unitPrice, subTotal, id]\r\n    );\r\n\r\n    return NextResponse.json({ message: \"Detalle actualizado\" });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Error al actualizar detalle\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ✅ DELETE: Eliminar un detalle\r\nexport async function DELETE(request, { params }) {\r\n  const { id } = await request.json();\r\n\r\n  try {\r\n    await queryDB(`DELETE FROM invoice_details WHERE id = ?`, [id]);\r\n    return NextResponse.json({ message: \"Detalle eliminado correctamente.\" });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Error al eliminar detalle\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,eAAe,IAAI,GAAG,EAAE,EAAE,MAAM,EAAE;IACvC,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM;IAE5B,IAAI;QACF,IAAI,WAAW;YACb,MAAM,UAAU,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EAC1B,CAAC,gPAAgP,CAAC,EAClP;gBAAC;aAAU;YAEb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC3B,OAAO;YACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,KAAK,OAAO,EAAE,EAAE,MAAM,EAAE;IAC5C,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG;IAElE,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EACzB,CAAC;8CACuC,CAAC,EACzC;YAAC;YAAW;YAAW;YAAU;YAAa;YAAW;SAAS;QAGpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAkB,IAAI,OAAO,QAAQ;QAAC,GACjD;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,IAAI,OAAO,EAAE,EAAE,MAAM,EAAE;IAC3C,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG;IAEtE,IAAI;QACF,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EACV,CAAC;;mBAEY,CAAC,EACd;YAAC;YAAW;YAAW;YAAU;YAAa;YAAW;YAAU;SAAG;QAGxE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsB;IAC5D,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,OAAO,OAAO,EAAE,EAAE,MAAM,EAAE;IAC9C,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;IAEjC,IAAI;QACF,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EAAE,CAAC,wCAAwC,CAAC,EAAE;YAAC;SAAG;QAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAmC;IACzE,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}