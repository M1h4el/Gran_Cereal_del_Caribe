{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nlet pool;\r\n\r\nif (!global._pool) {\r\n  global._pool = mysql.createPool({\r\n    host: process.env.DB_HOST,\r\n    user: process.env.DB_USER,\r\n    password: process.env.DB_PASSWORD,\r\n    database: process.env.DB_NAME,\r\n    waitForConnections: true,\r\n    connectionLimit: 20,\r\n    queueLimit: 0,\r\n  });\r\n}\r\n\r\npool = global._pool;\r\n\r\nexport { pool };"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,IAAI,CAAC,OAAO,KAAK,EAAE;IACjB,OAAO,KAAK,GAAG,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;QAC9B,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;QACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;QACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;QAC7B,oBAAoB;QACpB,iBAAiB;QACjB,YAAY;IACd;AACF;AAEA,OAAO,OAAO,KAAK"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/lib/dbUtils.js"],"sourcesContent":["import { pool } from \"./db\";\r\n\r\nexport async function queryDB(query, params = []) {\r\n  let connection;\r\n  try {\r\n    connection = await pool.getConnection();\r\n    const [results] = await connection.execute(query, params);\r\n    const [rows] = await connection.query(\r\n      'SHOW STATUS WHERE `variable_name` = \"Threads_connected\"'\r\n    );\r\n    console.log(\"Conexiones activas:\", rows[0]);\r\n    return results;\r\n  } catch (error) {\r\n    console.error(\"Database error:\", error);\r\n    throw error;\r\n  } finally {\r\n    if (connection) connection.release();\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,QAAQ,KAAK,EAAE,SAAS,EAAE;IAC9C,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,kHAAA,CAAA,OAAI,CAAC,aAAa;QACrC,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,OAAO;QAClD,MAAM,CAAC,KAAK,GAAG,MAAM,WAAW,KAAK,CACnC;QAEF,QAAQ,GAAG,CAAC,uBAAuB,IAAI,CAAC,EAAE;QAC1C,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM;IACR,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/solan/Desktop/AssessmentProject/frontend/src/app/api/products/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { queryDB } from \"@/lib/dbUtils\";\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    const { searchParams } = new URL(req.url);\r\n    const sucursalId = searchParams.get(\"sucursalId\");\r\n    const productCode = searchParams.get(\"productCode\")?.trim(); // opcional\r\n\r\n    if (!sucursalId) {\r\n      return NextResponse.json(\r\n        { error: \"Sucursal no especificada\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    let result;\r\n\r\n    if (productCode) {\r\n      result = await queryDB(\r\n        \"SELECT productCode, name, inventory FROM products WHERE sucursal_id = ? AND productCode = ?\",\r\n        [sucursalId, productCode]\r\n      );\r\n    } else {\r\n      result = await queryDB(\r\n        `SELECT p.* \r\n         FROM products p \r\n         JOIN sucursales s ON p.sucursal_id = s.sucursal_id \r\n         WHERE p.sucursal_id = ? \r\n         ORDER BY p.created_at DESC`,\r\n        [sucursalId]\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(result, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error al obtener productos:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Error interno del servidor\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const { searchParams } = new URL(req.url);\r\n    const sucursalId = searchParams.get(\"sucursalId\");\r\n    const data = await req.json();\r\n\r\n    if (!sucursalId) {\r\n      return NextResponse.json(\r\n        { error: \"Sucursal no especificada\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const {\r\n      productCode,\r\n      name,\r\n      description,\r\n      inventory,\r\n      basePricing,\r\n      BaseSellerPricing,\r\n      detalSellPrice,\r\n      MayorSellPrice,\r\n      updated_at,\r\n    } = data;\r\n\r\n    console.log(\"data\", data);\r\n\r\n    const result = await queryDB(\r\n      `INSERT INTO products (\r\n        productCode,\r\n        name,\r\n        description,\r\n        inventory,\r\n        basePricing,\r\n        BaseSellerPricing,\r\n        detalSellPrice,\r\n        MayorSellPrice,\r\n        updated_at,\r\n        sucursal_id\r\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\r\n      [\r\n        productCode || null,\r\n        name || null,\r\n        description || null,\r\n        inventory || 0,\r\n        basePricing || null,\r\n        BaseSellerPricing || null,\r\n        detalSellPrice || null,\r\n        MayorSellPrice || null,\r\n        updated_at,\r\n        sucursalId,\r\n      ]\r\n    );\r\n\r\n    console.log(\"result\", result);\r\n\r\n    return NextResponse.json(\r\n      { message: \"Producto insertado correctamente\", result },\r\n      { status: 201 }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error al insertar producto:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Error al insertar el producto\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,aAAa,aAAa,GAAG,CAAC;QACpC,MAAM,cAAc,aAAa,GAAG,CAAC,gBAAgB,QAAQ,WAAW;QAExE,IAAI,CAAC,YAAY;YACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI;QAEJ,IAAI,aAAa;YACf,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EACnB,+FACA;gBAAC;gBAAY;aAAY;QAE7B,OAAO;YACL,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EACnB,CAAC;;;;mCAI0B,CAAC,EAC5B;gBAAC;aAAW;QAEhB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ;YAAE,QAAQ;QAAI;IACjD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,aAAa,aAAa,GAAG,CAAC;QACpC,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,IAAI,CAAC,YAAY;YACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EACJ,WAAW,EACX,IAAI,EACJ,WAAW,EACX,SAAS,EACT,WAAW,EACX,iBAAiB,EACjB,cAAc,EACd,cAAc,EACd,UAAU,EACX,GAAG;QAEJ,QAAQ,GAAG,CAAC,QAAQ;QAEpB,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EACzB,CAAC;;;;;;;;;;;6CAWsC,CAAC,EACxC;YACE,eAAe;YACf,QAAQ;YACR,eAAe;YACf,aAAa;YACb,eAAe;YACf,qBAAqB;YACrB,kBAAkB;YAClB,kBAAkB;YAClB;YACA;SACD;QAGH,QAAQ,GAAG,CAAC,UAAU;QAEtB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAoC;QAAO,GACtD;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAgC,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}